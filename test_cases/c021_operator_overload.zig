// auto generated by c2z
const std = @import("std");
//const cpp = @import("cpp");

pub const ImVec2 = extern struct {
    x: f32,
    y: f32,

    extern fn _1_ImVec2_init_(self: *ImVec2) void;
    pub inline fn init() ImVec2 {
        var self: ImVec2 = undefined;
        _1_ImVec2_init_(&self);
        return self;
    }

    extern fn _2_ImVec2_init_(self: *ImVec2, x: f32, y: f32) void;
    pub inline fn init2(x: f32, y: f32) ImVec2 {
        var self: ImVec2 = undefined;
        _2_ImVec2_init_(&self, x, y);
        return self;
    }

    extern fn _1_ImVec2_getPtr_(self: *ImVec2, idx: c_int) *f32;
    pub const getPtr = _1_ImVec2_getPtr_;

    extern fn _1_ImVec2_get_(self: *const ImVec2, idx: c_int) f32;
    pub const get = _1_ImVec2_get_;

    extern fn _1_ImVec2_mul_(self: *const ImVec2, rhs: f32) ImVec2;
    pub const mul = _1_ImVec2_mul_;

    extern fn _1_ImVec2_mulInto_(self: *ImVec2, rhs: f32) *ImVec2;
    pub const mulInto = _1_ImVec2_mulInto_;

    extern fn _1_ImVec2_div_(self: *const ImVec2, rhs: f32) ImVec2;
    pub const div = _1_ImVec2_div_;

    extern fn _1_ImVec2_divInto_(self: *ImVec2, rhs: f32) *ImVec2;
    pub const divInto = _1_ImVec2_divInto_;

    extern fn _1_ImVec2_add_(self: *const ImVec2, rhs: *const ImVec2) ImVec2;
    pub const add = _1_ImVec2_add_;

    extern fn _1_ImVec2_addInto_(self: *ImVec2, rhs: *const ImVec2) *ImVec2;
    pub const addInto = _1_ImVec2_addInto_;

    extern fn _1_ImVec2_sub_(self: *const ImVec2, rhs: *const ImVec2) ImVec2;
    pub const sub = _1_ImVec2_sub_;

    extern fn _1_ImVec2_subInto_(self: *ImVec2, rhs: *const ImVec2) *ImVec2;
    pub const subInto = _1_ImVec2_subInto_;
};

pub const ImVec4 = extern struct {
    x: f32,
    y: f32,
    z: f32,
};

extern fn _1_add_(lhs: *const ImVec4, rhs: *const ImVec4) ImVec4;
pub const add = _1_add_;

extern fn _1_sub_(lhs: *const ImVec4, rhs: *const ImVec4) ImVec4;
pub const sub = _1_sub_;

extern fn _1_mul_(lhs: *const ImVec4, rhs: *const ImVec4) ImVec4;
pub const mul = _1_mul_;
